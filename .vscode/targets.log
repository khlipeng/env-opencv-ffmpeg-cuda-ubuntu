make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Wed May 18 10:10:55 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
 
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 3)
GOLANG_VERSION := 1.18
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/lipeng/workspace/golang/src/github.com/khlipeng/env-opencv-ffmpeg-cuda-ubuntu
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/bk/z6hvq79j6hb_s4_tcldmqkzr0000gn/T/vscode-ipc-535ff1e6-3315-43d5-8088-7c8709912a0e.sock
# environment
VSCODE_CWD = /
# environment
PATH = /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.NE9btQJVCF/Listeners
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/lipeng/workspace/golang/src/github.com/khlipeng/env-opencv-ffmpeg-cuda-ubuntu
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/lipeng
# makefile (from `Makefile', line 1)
OPENCV_VERSION := 4.4.0
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/lipeng/Library/Application Support/Code/CachedData/da15b6fd3ef856477bf6f4fb29ba1b7af717770d
# environment
LOGNAME = lipeng
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
ZSH = /Users/lipeng/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = lipeng
# makefile
.DEFAULT_GOAL := opencv-cuda-runtime
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 2)
CUDA_VERSION := 11.4.0
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `Makefile', line 5)
FFMPEG_VERSION := 5.0
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/bk/z6hvq79j6hb_s4_tcldmqkzr0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/lipeng/Library/Application Support/Code/1.67.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.840404.840410
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x19:0x34
# environment
COMMAND_MODE = unix2003
# makefile (from `Makefile', line 6)
PLATFORM := linux/amd64,linux/arm64
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 4)
GOCV_VERSION := 0.25.0
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 8925
# variable set hash-table stats:
 
# Load=71/1024=7%, Rehash=0, Collisions=1/104=1%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777229, inode 895445): 11 files, no impossibilities.

# 11 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
.:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

opencv-cuda-devel:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 20):
	docker buildx build --push --progress plain --platform=${PLATFORM}	\
	--cache-from "type=local,src=/tmp/.buildx-cache" \
	--cache-to "type=local,dest=/tmp/.buildx-cache" \
	--file=opencv-cuda_devel-ubuntu.Dockerfile \
	--tag=khlipeng/opencv-cuda-devel:${OPENCV_VERSION}-${CUDA_VERSION}-${FFMPEG_VERSION}	\
	--build-arg=OPENCV_VERSION=${OPENCV_VERSION}	\
	--build-arg=CUDA_VERSION=${CUDA_VERSION}	\
	--build-arg=FFMPEG_VERSION=${FFMPEG_VERSION}	\
	.
	

opencv-cuda-runtime:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 9):
	docker buildx build --push --progress plain --platform=${PLATFORM}	\
	--cache-from "type=local,src=/tmp/.buildx-cache" \
	--cache-to "type=local,dest=/tmp/.buildx-cache" \
	--file=opencv-cuda_runtime-ubuntu.Dockerfile \
	--tag=khlipeng/opencv-cuda-runtime:${OPENCV_VERSION}-${CUDA_VERSION}-${FFMPEG_VERSION} \
	--build-arg=OPENCV_VERSION=${OPENCV_VERSION}	\
	--build-arg=CUDA_VERSION=${CUDA_VERSION}	\
	--build-arg=FFMPEG_VERSION=${FFMPEG_VERSION}	\
	.
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-17 16:18:35
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

go-cuda-devel: .
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 31):
	docker buildx build --push --progress plain \
	--platform=${PLATFORM} \
	--file=go-cuda_devel-ubuntu.Dockerfile \
	--tag=khlipeng/go-cuda-devel:${GOLANG_VERSION}-${OPENCV_VERSION}-${CUDA_VERSION}-${FFMPEG_VERSION} \
	--build-arg=GOLANG_VERSION=${GOLANG_VERSION}	\
	--build-arg=OPENCV_VERSION=${OPENCV_VERSION}	\
	--build-arg=CUDA_VERSION=${CUDA_VERSION}	\
	--build-arg=GOCV_VERSION=${GOCV_VERSION}	\
	--build-arg=FFMPEG_VERSION=${FFMPEG_VERSION}	\
	.
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=8/1024=1%, Rehash=0, Collisions=0/21=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Wed May 18 10:10:55 2022

 
